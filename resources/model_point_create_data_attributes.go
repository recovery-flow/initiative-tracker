/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PointCreateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PointCreateDataAttributes{}

// PointCreateDataAttributes struct for PointCreateDataAttributes
type PointCreateDataAttributes struct {
	// parent id
	ParentId *string `json:"parent_id,omitempty"`
	// level of point
	Level int32 `json:"level"`
	// title of point
	Title string `json:"title"`
	// description of point
	Desc string `json:"desc"`
	// local cost
	LocalCost *float64 `json:"local_cost,omitempty"`
	Jar *JarAttributes `json:"jar,omitempty"`
}

type _PointCreateDataAttributes PointCreateDataAttributes

// NewPointCreateDataAttributes instantiates a new PointCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPointCreateDataAttributes(level int32, title string, desc string) *PointCreateDataAttributes {
	this := PointCreateDataAttributes{}
	this.Level = level
	this.Title = title
	this.Desc = desc
	return &this
}

// NewPointCreateDataAttributesWithDefaults instantiates a new PointCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPointCreateDataAttributesWithDefaults() *PointCreateDataAttributes {
	this := PointCreateDataAttributes{}
	return &this
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PointCreateDataAttributes) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PointCreateDataAttributes) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PointCreateDataAttributes) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *PointCreateDataAttributes) SetParentId(v string) {
	o.ParentId = &v
}

// GetLevel returns the Level field value
func (o *PointCreateDataAttributes) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *PointCreateDataAttributes) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *PointCreateDataAttributes) SetLevel(v int32) {
	o.Level = v
}

// GetTitle returns the Title field value
func (o *PointCreateDataAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PointCreateDataAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PointCreateDataAttributes) SetTitle(v string) {
	o.Title = v
}

// GetDesc returns the Desc field value
func (o *PointCreateDataAttributes) GetDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *PointCreateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *PointCreateDataAttributes) SetDesc(v string) {
	o.Desc = v
}

// GetLocalCost returns the LocalCost field value if set, zero value otherwise.
func (o *PointCreateDataAttributes) GetLocalCost() float64 {
	if o == nil || IsNil(o.LocalCost) {
		var ret float64
		return ret
	}
	return *o.LocalCost
}

// GetLocalCostOk returns a tuple with the LocalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PointCreateDataAttributes) GetLocalCostOk() (*float64, bool) {
	if o == nil || IsNil(o.LocalCost) {
		return nil, false
	}
	return o.LocalCost, true
}

// HasLocalCost returns a boolean if a field has been set.
func (o *PointCreateDataAttributes) HasLocalCost() bool {
	if o != nil && !IsNil(o.LocalCost) {
		return true
	}

	return false
}

// SetLocalCost gets a reference to the given float64 and assigns it to the LocalCost field.
func (o *PointCreateDataAttributes) SetLocalCost(v float64) {
	o.LocalCost = &v
}

// GetJar returns the Jar field value if set, zero value otherwise.
func (o *PointCreateDataAttributes) GetJar() JarAttributes {
	if o == nil || IsNil(o.Jar) {
		var ret JarAttributes
		return ret
	}
	return *o.Jar
}

// GetJarOk returns a tuple with the Jar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PointCreateDataAttributes) GetJarOk() (*JarAttributes, bool) {
	if o == nil || IsNil(o.Jar) {
		return nil, false
	}
	return o.Jar, true
}

// HasJar returns a boolean if a field has been set.
func (o *PointCreateDataAttributes) HasJar() bool {
	if o != nil && !IsNil(o.Jar) {
		return true
	}

	return false
}

// SetJar gets a reference to the given JarAttributes and assigns it to the Jar field.
func (o *PointCreateDataAttributes) SetJar(v JarAttributes) {
	o.Jar = &v
}

func (o PointCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PointCreateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	toSerialize["level"] = o.Level
	toSerialize["title"] = o.Title
	toSerialize["desc"] = o.Desc
	if !IsNil(o.LocalCost) {
		toSerialize["local_cost"] = o.LocalCost
	}
	if !IsNil(o.Jar) {
		toSerialize["jar"] = o.Jar
	}
	return toSerialize, nil
}

func (o *PointCreateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"level",
		"title",
		"desc",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPointCreateDataAttributes := _PointCreateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPointCreateDataAttributes)

	if err != nil {
		return err
	}

	*o = PointCreateDataAttributes(varPointCreateDataAttributes)

	return err
}

type NullablePointCreateDataAttributes struct {
	value *PointCreateDataAttributes
	isSet bool
}

func (v NullablePointCreateDataAttributes) Get() *PointCreateDataAttributes {
	return v.value
}

func (v *NullablePointCreateDataAttributes) Set(val *PointCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePointCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePointCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePointCreateDataAttributes(val *PointCreateDataAttributes) *NullablePointCreateDataAttributes {
	return &NullablePointCreateDataAttributes{value: val, isSet: true}
}

func (v NullablePointCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePointCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


