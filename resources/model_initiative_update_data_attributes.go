/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the InitiativeUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiativeUpdateDataAttributes{}

// InitiativeUpdateDataAttributes struct for InitiativeUpdateDataAttributes
type InitiativeUpdateDataAttributes struct {
	// name of initiative
	Name *string `json:"name,omitempty"`
	// description of initiative
	Desc *string `json:"desc,omitempty"`
	// goal of initiative
	Goal *string `json:"goal,omitempty"`
	// location of initiative
	Location *string `json:"location,omitempty"`
	// types of initiative
	Type *string `json:"type,omitempty"`
	// status of initiative
	Status *string `json:"status,omitempty"`
	// final cost of initiative
	FinalCost *int64 `json:"final_cost,omitempty"`
	Wallets *Wallets `json:"wallets,omitempty"`
	OrgMembers []AddOrgMember `json:"org_members,omitempty"`
}

// NewInitiativeUpdateDataAttributes instantiates a new InitiativeUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiativeUpdateDataAttributes() *InitiativeUpdateDataAttributes {
	this := InitiativeUpdateDataAttributes{}
	return &this
}

// NewInitiativeUpdateDataAttributesWithDefaults instantiates a new InitiativeUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiativeUpdateDataAttributesWithDefaults() *InitiativeUpdateDataAttributes {
	this := InitiativeUpdateDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InitiativeUpdateDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *InitiativeUpdateDataAttributes) SetDesc(v string) {
	o.Desc = &v
}

// GetGoal returns the Goal field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetGoal() string {
	if o == nil || IsNil(o.Goal) {
		var ret string
		return ret
	}
	return *o.Goal
}

// GetGoalOk returns a tuple with the Goal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetGoalOk() (*string, bool) {
	if o == nil || IsNil(o.Goal) {
		return nil, false
	}
	return o.Goal, true
}

// HasGoal returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasGoal() bool {
	if o != nil && !IsNil(o.Goal) {
		return true
	}

	return false
}

// SetGoal gets a reference to the given string and assigns it to the Goal field.
func (o *InitiativeUpdateDataAttributes) SetGoal(v string) {
	o.Goal = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *InitiativeUpdateDataAttributes) SetLocation(v string) {
	o.Location = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InitiativeUpdateDataAttributes) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InitiativeUpdateDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetFinalCost returns the FinalCost field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetFinalCost() int64 {
	if o == nil || IsNil(o.FinalCost) {
		var ret int64
		return ret
	}
	return *o.FinalCost
}

// GetFinalCostOk returns a tuple with the FinalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetFinalCostOk() (*int64, bool) {
	if o == nil || IsNil(o.FinalCost) {
		return nil, false
	}
	return o.FinalCost, true
}

// HasFinalCost returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasFinalCost() bool {
	if o != nil && !IsNil(o.FinalCost) {
		return true
	}

	return false
}

// SetFinalCost gets a reference to the given int64 and assigns it to the FinalCost field.
func (o *InitiativeUpdateDataAttributes) SetFinalCost(v int64) {
	o.FinalCost = &v
}

// GetWallets returns the Wallets field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetWallets() Wallets {
	if o == nil || IsNil(o.Wallets) {
		var ret Wallets
		return ret
	}
	return *o.Wallets
}

// GetWalletsOk returns a tuple with the Wallets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetWalletsOk() (*Wallets, bool) {
	if o == nil || IsNil(o.Wallets) {
		return nil, false
	}
	return o.Wallets, true
}

// HasWallets returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasWallets() bool {
	if o != nil && !IsNil(o.Wallets) {
		return true
	}

	return false
}

// SetWallets gets a reference to the given Wallets and assigns it to the Wallets field.
func (o *InitiativeUpdateDataAttributes) SetWallets(v Wallets) {
	o.Wallets = &v
}

// GetOrgMembers returns the OrgMembers field value if set, zero value otherwise.
func (o *InitiativeUpdateDataAttributes) GetOrgMembers() []AddOrgMember {
	if o == nil || IsNil(o.OrgMembers) {
		var ret []AddOrgMember
		return ret
	}
	return o.OrgMembers
}

// GetOrgMembersOk returns a tuple with the OrgMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiativeUpdateDataAttributes) GetOrgMembersOk() ([]AddOrgMember, bool) {
	if o == nil || IsNil(o.OrgMembers) {
		return nil, false
	}
	return o.OrgMembers, true
}

// HasOrgMembers returns a boolean if a field has been set.
func (o *InitiativeUpdateDataAttributes) HasOrgMembers() bool {
	if o != nil && !IsNil(o.OrgMembers) {
		return true
	}

	return false
}

// SetOrgMembers gets a reference to the given []AddOrgMember and assigns it to the OrgMembers field.
func (o *InitiativeUpdateDataAttributes) SetOrgMembers(v []AddOrgMember) {
	o.OrgMembers = v
}

func (o InitiativeUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiativeUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.Goal) {
		toSerialize["goal"] = o.Goal
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.FinalCost) {
		toSerialize["final_cost"] = o.FinalCost
	}
	if !IsNil(o.Wallets) {
		toSerialize["wallets"] = o.Wallets
	}
	if !IsNil(o.OrgMembers) {
		toSerialize["org_members"] = o.OrgMembers
	}
	return toSerialize, nil
}

type NullableInitiativeUpdateDataAttributes struct {
	value *InitiativeUpdateDataAttributes
	isSet bool
}

func (v NullableInitiativeUpdateDataAttributes) Get() *InitiativeUpdateDataAttributes {
	return v.value
}

func (v *NullableInitiativeUpdateDataAttributes) Set(val *InitiativeUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiativeUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiativeUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiativeUpdateDataAttributes(val *InitiativeUpdateDataAttributes) *NullableInitiativeUpdateDataAttributes {
	return &NullableInitiativeUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableInitiativeUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiativeUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


