/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PointUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PointUpdateDataAttributes{}

// PointUpdateDataAttributes struct for PointUpdateDataAttributes
type PointUpdateDataAttributes struct {
	// parent id
	ParentId *string `json:"parent_id,omitempty"`
	// title of point
	Title string `json:"title"`
	// description of point
	Desc string `json:"desc"`
	// local cost
	LocalCost int32 `json:"local_cost"`
}

type _PointUpdateDataAttributes PointUpdateDataAttributes

// NewPointUpdateDataAttributes instantiates a new PointUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPointUpdateDataAttributes(title string, desc string, localCost int32) *PointUpdateDataAttributes {
	this := PointUpdateDataAttributes{}
	this.Title = title
	this.Desc = desc
	this.LocalCost = localCost
	return &this
}

// NewPointUpdateDataAttributesWithDefaults instantiates a new PointUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPointUpdateDataAttributesWithDefaults() *PointUpdateDataAttributes {
	this := PointUpdateDataAttributes{}
	return &this
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PointUpdateDataAttributes) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PointUpdateDataAttributes) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PointUpdateDataAttributes) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *PointUpdateDataAttributes) SetParentId(v string) {
	o.ParentId = &v
}

// GetTitle returns the Title field value
func (o *PointUpdateDataAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PointUpdateDataAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PointUpdateDataAttributes) SetTitle(v string) {
	o.Title = v
}

// GetDesc returns the Desc field value
func (o *PointUpdateDataAttributes) GetDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *PointUpdateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *PointUpdateDataAttributes) SetDesc(v string) {
	o.Desc = v
}

// GetLocalCost returns the LocalCost field value
func (o *PointUpdateDataAttributes) GetLocalCost() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LocalCost
}

// GetLocalCostOk returns a tuple with the LocalCost field value
// and a boolean to check if the value has been set.
func (o *PointUpdateDataAttributes) GetLocalCostOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalCost, true
}

// SetLocalCost sets field value
func (o *PointUpdateDataAttributes) SetLocalCost(v int32) {
	o.LocalCost = v
}

func (o PointUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PointUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	toSerialize["title"] = o.Title
	toSerialize["desc"] = o.Desc
	toSerialize["local_cost"] = o.LocalCost
	return toSerialize, nil
}

func (o *PointUpdateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"desc",
		"local_cost",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPointUpdateDataAttributes := _PointUpdateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPointUpdateDataAttributes)

	if err != nil {
		return err
	}

	*o = PointUpdateDataAttributes(varPointUpdateDataAttributes)

	return err
}

type NullablePointUpdateDataAttributes struct {
	value *PointUpdateDataAttributes
	isSet bool
}

func (v NullablePointUpdateDataAttributes) Get() *PointUpdateDataAttributes {
	return v.value
}

func (v *NullablePointUpdateDataAttributes) Set(val *PointUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePointUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePointUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePointUpdateDataAttributes(val *PointUpdateDataAttributes) *NullablePointUpdateDataAttributes {
	return &NullablePointUpdateDataAttributes{value: val, isSet: true}
}

func (v NullablePointUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePointUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


