/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PointAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PointAttributes{}

// PointAttributes struct for PointAttributes
type PointAttributes struct {
	// initiative id
	InitiativeId string `json:"initiative_id"`
	// level of point
	Level int32 `json:"level"`
	// parent id
	ParentId *string `json:"parent_id,omitempty"`
	// title of point
	Title string `json:"title"`
	// description of point
	Desc string `json:"desc"`
	// published by
	PublishedBy string `json:"published_by"`
	// local cost
	LocalCost float64 `json:"local_cost"`
	// local collected
	LocalCollected float64 `json:"local_collected"`
	// status of point
	Status string `json:"status"`
	// point creation timestamp
	CreatedAt time.Time `json:"created_at"`
	// point updated timestamp
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type _PointAttributes PointAttributes

// NewPointAttributes instantiates a new PointAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPointAttributes(initiativeId string, level int32, title string, desc string, publishedBy string, localCost float64, localCollected float64, status string, createdAt time.Time) *PointAttributes {
	this := PointAttributes{}
	this.InitiativeId = initiativeId
	this.Level = level
	this.Title = title
	this.Desc = desc
	this.PublishedBy = publishedBy
	this.LocalCost = localCost
	this.LocalCollected = localCollected
	this.Status = status
	this.CreatedAt = createdAt
	return &this
}

// NewPointAttributesWithDefaults instantiates a new PointAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPointAttributesWithDefaults() *PointAttributes {
	this := PointAttributes{}
	return &this
}

// GetInitiativeId returns the InitiativeId field value
func (o *PointAttributes) GetInitiativeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InitiativeId
}

// GetInitiativeIdOk returns a tuple with the InitiativeId field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetInitiativeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitiativeId, true
}

// SetInitiativeId sets field value
func (o *PointAttributes) SetInitiativeId(v string) {
	o.InitiativeId = v
}

// GetLevel returns the Level field value
func (o *PointAttributes) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *PointAttributes) SetLevel(v int32) {
	o.Level = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PointAttributes) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PointAttributes) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *PointAttributes) SetParentId(v string) {
	o.ParentId = &v
}

// GetTitle returns the Title field value
func (o *PointAttributes) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PointAttributes) SetTitle(v string) {
	o.Title = v
}

// GetDesc returns the Desc field value
func (o *PointAttributes) GetDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *PointAttributes) SetDesc(v string) {
	o.Desc = v
}

// GetPublishedBy returns the PublishedBy field value
func (o *PointAttributes) GetPublishedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublishedBy
}

// GetPublishedByOk returns a tuple with the PublishedBy field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetPublishedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishedBy, true
}

// SetPublishedBy sets field value
func (o *PointAttributes) SetPublishedBy(v string) {
	o.PublishedBy = v
}

// GetLocalCost returns the LocalCost field value
func (o *PointAttributes) GetLocalCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.LocalCost
}

// GetLocalCostOk returns a tuple with the LocalCost field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetLocalCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalCost, true
}

// SetLocalCost sets field value
func (o *PointAttributes) SetLocalCost(v float64) {
	o.LocalCost = v
}

// GetLocalCollected returns the LocalCollected field value
func (o *PointAttributes) GetLocalCollected() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.LocalCollected
}

// GetLocalCollectedOk returns a tuple with the LocalCollected field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetLocalCollectedOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalCollected, true
}

// SetLocalCollected sets field value
func (o *PointAttributes) SetLocalCollected(v float64) {
	o.LocalCollected = v
}

// GetStatus returns the Status field value
func (o *PointAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PointAttributes) SetStatus(v string) {
	o.Status = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PointAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PointAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PointAttributes) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PointAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PointAttributes) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PointAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PointAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PointAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["initiative_id"] = o.InitiativeId
	toSerialize["level"] = o.Level
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	toSerialize["title"] = o.Title
	toSerialize["desc"] = o.Desc
	toSerialize["published_by"] = o.PublishedBy
	toSerialize["local_cost"] = o.LocalCost
	toSerialize["local_collected"] = o.LocalCollected
	toSerialize["status"] = o.Status
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *PointAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"initiative_id",
		"level",
		"title",
		"desc",
		"published_by",
		"local_cost",
		"local_collected",
		"status",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPointAttributes := _PointAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPointAttributes)

	if err != nil {
		return err
	}

	*o = PointAttributes(varPointAttributes)

	return err
}

type NullablePointAttributes struct {
	value *PointAttributes
	isSet bool
}

func (v NullablePointAttributes) Get() *PointAttributes {
	return v.value
}

func (v *NullablePointAttributes) Set(val *PointAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePointAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePointAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePointAttributes(val *PointAttributes) *NullablePointAttributes {
	return &NullablePointAttributes{value: val, isSet: true}
}

func (v NullablePointAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePointAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


