/*
test

example

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the WalletsPaymentSystem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletsPaymentSystem{}

// WalletsPaymentSystem struct for WalletsPaymentSystem
type WalletsPaymentSystem struct {
	// paypal account
	PayPal *string `json:"pay_pal,omitempty"`
	// apple pay account
	ApplePay *string `json:"apple_pay,omitempty"`
	// google pay account
	GooglePay *string `json:"google_pay,omitempty"`
}

// NewWalletsPaymentSystem instantiates a new WalletsPaymentSystem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletsPaymentSystem() *WalletsPaymentSystem {
	this := WalletsPaymentSystem{}
	return &this
}

// NewWalletsPaymentSystemWithDefaults instantiates a new WalletsPaymentSystem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletsPaymentSystemWithDefaults() *WalletsPaymentSystem {
	this := WalletsPaymentSystem{}
	return &this
}

// GetPayPal returns the PayPal field value if set, zero value otherwise.
func (o *WalletsPaymentSystem) GetPayPal() string {
	if o == nil || IsNil(o.PayPal) {
		var ret string
		return ret
	}
	return *o.PayPal
}

// GetPayPalOk returns a tuple with the PayPal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsPaymentSystem) GetPayPalOk() (*string, bool) {
	if o == nil || IsNil(o.PayPal) {
		return nil, false
	}
	return o.PayPal, true
}

// HasPayPal returns a boolean if a field has been set.
func (o *WalletsPaymentSystem) HasPayPal() bool {
	if o != nil && !IsNil(o.PayPal) {
		return true
	}

	return false
}

// SetPayPal gets a reference to the given string and assigns it to the PayPal field.
func (o *WalletsPaymentSystem) SetPayPal(v string) {
	o.PayPal = &v
}

// GetApplePay returns the ApplePay field value if set, zero value otherwise.
func (o *WalletsPaymentSystem) GetApplePay() string {
	if o == nil || IsNil(o.ApplePay) {
		var ret string
		return ret
	}
	return *o.ApplePay
}

// GetApplePayOk returns a tuple with the ApplePay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsPaymentSystem) GetApplePayOk() (*string, bool) {
	if o == nil || IsNil(o.ApplePay) {
		return nil, false
	}
	return o.ApplePay, true
}

// HasApplePay returns a boolean if a field has been set.
func (o *WalletsPaymentSystem) HasApplePay() bool {
	if o != nil && !IsNil(o.ApplePay) {
		return true
	}

	return false
}

// SetApplePay gets a reference to the given string and assigns it to the ApplePay field.
func (o *WalletsPaymentSystem) SetApplePay(v string) {
	o.ApplePay = &v
}

// GetGooglePay returns the GooglePay field value if set, zero value otherwise.
func (o *WalletsPaymentSystem) GetGooglePay() string {
	if o == nil || IsNil(o.GooglePay) {
		var ret string
		return ret
	}
	return *o.GooglePay
}

// GetGooglePayOk returns a tuple with the GooglePay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsPaymentSystem) GetGooglePayOk() (*string, bool) {
	if o == nil || IsNil(o.GooglePay) {
		return nil, false
	}
	return o.GooglePay, true
}

// HasGooglePay returns a boolean if a field has been set.
func (o *WalletsPaymentSystem) HasGooglePay() bool {
	if o != nil && !IsNil(o.GooglePay) {
		return true
	}

	return false
}

// SetGooglePay gets a reference to the given string and assigns it to the GooglePay field.
func (o *WalletsPaymentSystem) SetGooglePay(v string) {
	o.GooglePay = &v
}

func (o WalletsPaymentSystem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletsPaymentSystem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PayPal) {
		toSerialize["pay_pal"] = o.PayPal
	}
	if !IsNil(o.ApplePay) {
		toSerialize["apple_pay"] = o.ApplePay
	}
	if !IsNil(o.GooglePay) {
		toSerialize["google_pay"] = o.GooglePay
	}
	return toSerialize, nil
}

type NullableWalletsPaymentSystem struct {
	value *WalletsPaymentSystem
	isSet bool
}

func (v NullableWalletsPaymentSystem) Get() *WalletsPaymentSystem {
	return v.value
}

func (v *NullableWalletsPaymentSystem) Set(val *WalletsPaymentSystem) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletsPaymentSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletsPaymentSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletsPaymentSystem(val *WalletsPaymentSystem) *NullableWalletsPaymentSystem {
	return &NullableWalletsPaymentSystem{value: val, isSet: true}
}

func (v NullableWalletsPaymentSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletsPaymentSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


